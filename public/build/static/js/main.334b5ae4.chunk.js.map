{"version":3,"sources":["containers/Site/Navbar/Navbar.js","containers/Site/SignUp/SignUp.js","containers/Site/Login/Login.js","containers/Site/Upload/FileBox/FileBox.js","containers/Site/Upload/Upload.js","containers/Site/FileViewer/FileBar/FileBar.js","containers/Site/FileViewer/FileViewer.js","containers/Site/Footer/Footer.js","containers/Site/Site.js","containers/App.js","index.js"],"names":["navbar","props","loginObj","btnText","btnLink","onClickAction","console","log","isUser","user","logoutHandler","react_default","a","createElement","className","Link","to","onClick","SignUp","state","username","password","password2","email","submitted","errors","handleSubmit","event","postData","_this","setState","axios","post","then","response","data","msg","setTimeout","window","location","href","catch","err","status","newErrorsString","map","error","join","preventDefault","handleUsernameChange","target","value","handlePasswordChange","handlePassword2Change","handleEmailChange","nextProps","nextState","this","onSubmit","type","onChange","name","Component","Login","localStorage","setItem","token","_id","loadUser","fileBox","size","Math","round","parseFloat","toString","e","onRemove","call","index","style","marginLeft","color","fileName","slice","Upload","files","description","descriptionChangedHandler","submitFilesHandler","headers","Type","Authorization","tokenProp","UploadDescription","formData","FormData","forEach","file","append","logout","onDrop","stopPropagation","tempFiles","splice","fileInputChangedHandler","_this2","encType","es","bind","length","f","FileBox_FileBox","key","maxlength","placeholder","fileBar","Fragment","filename","method","action","encodeURIComponent","fileId","onDelete","onCopy","uploadDate","fileDescription","FileViewer","Object","toConsumableArray","sort","b","get","newFiles","tempEle","document","host","body","appendChild","select","execCommand","removeChild","_this3","delete","fetchData","_this4","id","FileBar_FileBar","onDeleteHandler","Date","toLocaleString","metadata","uploadDescription","footer","Site","getItem","userId","handleLogout","clear","loadUsers","noUserRoutes","Route","path","exact","render","Site_Login_Login","Site_SignUp_SignUp","yesUserRoutes","Site_Upload_Upload","Site_FileViewer_FileViewer","Navbar_Navbar","Footer_Footer","App","BrowserRouter","containers_Site_Site","ReactDOM","src_containers_App","getElementById"],"mappings":"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","file":"static/js/main.334b5ae4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst navbar = (props) =>{\r\n\r\n    let loginObj = {\r\n        btnText: \"Sign Up\",\r\n        btnLink: \"/signup\",\r\n        onClickAction: ()=>{console.log(\"\")}\r\n    }\r\n\r\n    if (props.isUser){\r\n        loginObj.btnLink = \"/\"\r\n        loginObj.btnText = \"Logout from \"+props.user;\r\n        loginObj.onClickAction = props.logoutHandler;\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <nav>\r\n                <ul>\r\n                    <li><Link to=\"/\">{props.isUser?\"Upload\":\"Login\"}</Link></li>\r\n                    {props.isUser?\r\n                    <li><Link to=\"/allfiles\">Your Files</Link></li>:\"\"}\r\n                    <li className=\"signup-btn\"><Link onClick={loginObj.onClickAction} to={loginObj.btnLink}>{loginObj.btnText}</Link></li>\r\n                </ul>\r\n            </nav>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default navbar;","import React, {Component} from 'react';\r\nimport './SignUp.css';\r\nimport axios from 'axios';\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    state = {\r\n        username:'',\r\n        password:'',\r\n        password2:'',\r\n        email:'',\r\n        submitted:false,\r\n        errors:''\r\n    }\r\n\r\n    handleSubmit = event => {\r\n\r\n        let postData = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            password2: this.state.password2,\r\n            email: this.state.email\r\n        }\r\n\r\n        this.setState({submitted:true});\r\n\r\n        axios.post('/users/signup', postData)\r\n        .then(response=>{\r\n\r\n            if (response.data.msg === \"Success - user created!\"){\r\n                this.setState({errors:\"Woohoo! user created ^_^\"},()=>{setTimeout(()=>window.location.href=\"/\",1000)});\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            if (err.response.status === 409){\r\n                let newErrorsArr = err.response.data.errors.map(error=>error.msg);\r\n                let newErrorsString = newErrorsArr.join(\"\\n\");\r\n            this.setState({errors:newErrorsString});\r\n            }\r\n        })\r\n\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleUsernameChange = (event)=>{\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n\r\n    handlePasswordChange = (event) =>{\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    handlePassword2Change = (event) =>{\r\n        this.setState({\r\n            password2: event.target.value\r\n        });\r\n    }\r\n\r\n    handleEmailChange = (event) =>{\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return (this.state.submitted || nextState.errors !== this.state.errors);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"signup-top-div\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <table className=\"signup-tbl\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>\r\n                                Username:\r\n                            </th>\r\n                            <td>\r\n                                <input type=\"text\" className=\"signup-input\" onChange={this.handleUsernameChange} name=\"username\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n                                Password:\r\n                            </th>\r\n                            <td>\r\n                                <input type=\"password\" className=\"signup-input\" onChange={this.handlePasswordChange} name=\"password\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n                                Confirm Password:\r\n                            </th>\r\n                            <td>\r\n                                <input type=\"password\" className=\"signup-input\" onChange={this.handlePassword2Change} name=\"password2\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n                                Email:\r\n                            </th>\r\n                            <td>\r\n                                <input type=\"text\" className=\"signup-input\" onChange={this.handleEmailChange} name=\"email\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n\r\n                            </th>\r\n                            <td>\r\n                            <input type=\"submit\" className=\"submit-btn\" value=\"Submit\"></input>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n                </form>\r\n\r\n                <div className=\"signup-error-div\">{this.state.errors}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, {Component} from 'react';\r\nimport './Login.css';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        username:'',\r\n        password:'',\r\n        submitted:false,\r\n        errors:''\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        let postData = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n        }\r\n\r\n        this.setState({submitted:true});\r\n\r\n        axios.post('/users/login', postData)\r\n        .then(response=>{\r\n            if (response.status === 200){\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                localStorage.setItem(\"userId\", response.data.user._id);\r\n                localStorage.setItem(\"userName\", response.data.user.username);\r\n                this.props.loadUser();\r\n            }\r\n\r\n        })\r\n        .catch(err=>{\r\n            if (err.response.status === 401){\r\n                this.setState({errors:\"Incorrect username or password!\"})\r\n            }\r\n            else{\r\n                this.setState({errors:\"Something went wrong...\"})\r\n\r\n            }\r\n        })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleUsernameChange = (event)=>{\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n\r\n    handlePasswordChange = (event) =>{\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    shouldComponentUpdate(){\r\n        return this.state.submitted;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <table className=\"login-tbl\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>\r\n                                Username:\r\n                            </th>\r\n                            <td>\r\n                                <input type=\"text\" className=\"signin-input\" onChange={this.handleUsernameChange} name=\"username\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n                                Password:\r\n                            </th>\r\n                            <td>\r\n                                <input type=\"password\" className=\"signin-input\" onChange={this.handlePasswordChange} name=\"password\"/>\r\n                            </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th></th>\r\n                                <td>\r\n                                    <input type=\"submit\" className=\"submit-btn\" value=\"Submit\"></input>\r\n                                </td>\r\n                            </tr>\r\n                      \r\n                        </tbody>\r\n                        <div className=\"error-div\">{this.state.errors}</div>\r\n\r\n                    </table>\r\n                    \r\n\r\n\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './FileBox.css';\r\n\r\nconst fileBox = props =>{\r\n\r\n    const xStyle={\r\n        marginLeft:\"-80%\",\r\n        color: \"green\"\r\n    }\r\n    \r\n    let size = (Math.round((parseFloat(props.size)/1000000)*100)/100).toString()+\" MB\"; /* show size in MBs with two digits after point*/\r\n    if (size==\"0 MB\"){\r\n\r\n        size = (Math.round((parseFloat(props.size)/1000)*100)/100).toString()+\" KB\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"file-box\">\r\n            <a href=\"#\" className=\"remove-file-box\" onClick={(e)=>{props.onRemove.call(this, e, props.index)}} style={xStyle}>X</a>\r\n            <p>{props.fileName.slice(0,20)+\"...\"}</p>\r\n            <p>{size}</p>\r\n        </div> \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default fileBox;","import React, {Component} from 'react';\r\nimport './Upload.css';\r\nimport axios from 'axios';\r\nimport Dropzone from 'react-dropzone';\r\nimport FileBox from './FileBox/FileBox';\r\n\r\n\r\nclass Upload extends Component{\r\n\r\n    state={\r\n        files: [],\r\n        description: ''\r\n        }\r\n\r\n    descriptionChangedHandler = event =>{\r\n        this.setState({description:event.target.value});\r\n    }\r\n\r\n    submitFilesHandler = event =>{\r\n        event.target.value=\"Uploading...\";\r\n        event.preventDefault();\r\n        \r\n        let headers = {\r\n           \"Type\": \"formData\",\r\n           'Authorization' : this.props.tokenProp,\r\n           \"UploadDescription\": this.state.description\r\n        }\r\n\r\n        let formData = new FormData();\r\n        this.state.files.forEach(file=>{\r\n            formData.append(\"files\",file);\r\n        })\r\n        axios.post('/files/upload', formData, {headers:headers})\r\n        .then(response=>{\r\n            window.location.href = window.location.href+\"allfiles\";\r\n        })\r\n        .catch(err=>{\r\n            this.props.logout();\r\n        })\r\n\r\n    }\r\n\r\n/**On adding a file */\r\n    onDrop = files=>{\r\n        this.setState({files:files});\r\n\r\n    }\r\n\r\n    onRemove = (event, index) =>{\r\n        event.preventDefault();\r\n        event.stopPropagation(); //prevent clicking outer div\r\n        let tempFiles = this.state.files.slice();\r\n        tempFiles.splice(index,1);\r\n        this.setState({files:tempFiles});\r\n    }\r\n\r\n    fileInputChangedHandler = (event) =>{\r\n        this.setState({files: event.target.files});\r\n    }\r\n\r\n    render(){\r\n\r\n        const style={\r\n            overflowY:\"scroll\",\r\n            width:\"400px\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"upload-form\">\r\n\r\n                <form onSubmit={this.submitFilesHandler} encType=\"multipart/form-data\">\r\n                    <table className=\"upload-tbl\">\r\n                    <tbody>\r\n                        <tr><th></th>\r\n                        <td>\r\n                            <Dropzone onDrop={this.onDrop.bind(this)} className=\"dropzone\">\r\n                            {this.state.files.length===0?(\r\n                                <p>Try dropping some files here, or click to select files to upload.</p>\r\n                            )\r\n                                :(<div>\r\n                                    {\r\n                                    this.state.files.map((f,index) => <FileBox\r\n                                        key={f.name}\r\n                                        fileName={f.name}\r\n                                        size={f.size}\r\n                                        onRemove={this.onRemove}\r\n                                        index={index}\r\n                                        />)\r\n                                    }\r\n                                </div>)}\r\n\r\n                            </Dropzone>\r\n                            \r\n                            </td></tr>\r\n                        <tr><th></th><td><input maxlength=\"30\"placeholder=\"Describe your upload... (30 chars)\" type=\"text\" onChange={this.descriptionChangedHandler}></input></td></tr>\r\n                        <tr><th></th><td><input type=\"submit\" value=\"Upload!\"></input></td></tr>\r\n                    </tbody>\r\n                    </table>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Upload;","import React from 'react';\r\nimport './FileBar.css';\r\n\r\nconst fileBar = props =>{\r\n\r\n    let size = (Math.round((parseFloat(props.size)/1000000)*100)/100).toString()+\" MB\"; /* show size in MBs with two digits after point*/\r\n    if (size==\"0 MB\"){\r\n\r\n        size = (Math.round((parseFloat(props.size)/1000)*100)/100).toString()+\" KB\";\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <tr className=\"file-bar\">\r\n                <td className=\"file-bar-property file-name-property\">{props.filename}</td>\r\n                <td className=\"file-bar-property\">{size}</td>\r\n                <td className=\"file-bar-property\"><form method=\"GET\" action={\"/files/download/\"+encodeURIComponent(props.fileId)}><button className=\"download-btn\">{\"⇩\"}</button></form></td>\r\n                <td className=\"file-bar-property\"><div onClick={props.onDelete}>❌</div></td>\r\n                <td className=\"file-bar-property\"><div onClick={props.onCopy}>📋</div></td>\r\n                <td className=\"file-bar-property\">{props.uploadDate}</td>\r\n                <td className=\"file-bar-property\">{props.fileDescription}</td>\r\n\r\n\r\n\r\n            </tr>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default fileBar;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport './FileViewer.css';\r\nimport FileBar from './FileBar/FileBar';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nclass FileViewer extends Component{\r\n\r\n    state={\r\n        files:[]\r\n    }\r\n\r\n/**Not done yet */\r\n    sortBySize(){\r\n        let tempFiles=[...this.state.files];\r\n        tempFiles.sort((a,b)=>a-b);\r\n        this.setState({files:tempFiles});\r\n    }\r\n\r\n\r\n    fetchData(){\r\n        let headers = {\r\n            'Authorization' : this.props.tokenProp,\r\n        }\r\n\r\n        axios.get('/files/all',{headers:headers})\r\n        .then(response=>{\r\n            let newFiles = response.data;\r\n            this.setState({files:newFiles}, ()=>{\r\n        });\r\n\r\n        })\r\n        .catch(err=>{\r\n            if (err.response.status === 401){\r\n                this.props.logout();\r\n            }\r\n        })\r\n    }\r\n\r\n    /**@param fileId string representing the file id */\r\n    /**Handles click on a \"copy-download-link-to-clipboard\" button */\r\n    onCopy(fileId){\r\n\r\n        let tempEle = document.createElement(\"input\");\r\n        tempEle.value = window.location.host+\"/files/download/\"+fileId;\r\n        document.body.appendChild(tempEle);\r\n        tempEle.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(tempEle);\r\n    }\r\n\r\n    /**@param fileId string representing the file id */\r\n    /**Handles click on a \"delete file\" button */\r\n    onDeleteHandler(fileId){\r\n\r\n        let headers = {\r\n            Authorization:this.props.tokenProp,\r\n        }\r\n        axios.delete('/files/'+fileId,{headers:headers})\r\n        .then(response=>{\r\n            this.fetchData();\r\n        })\r\n        .catch(err=>{\r\n            if (err.response.status === 401){\r\n                this.props.logout();\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"allfiles-tbl-top-div\">\r\n                {this.state.files.length>0?\r\n                (\r\n                    <React.Fragment>\r\n\r\n                        <div className=\"tbl-container\">\r\n                            <table>\r\n                    \r\n                                <thead>\r\n                                    <tr id=\"top-row\">\r\n                                        <th className=\"file-name-property\">\r\n                                            {\"File Name\"}\r\n                                        </th>\r\n                                        <th>\r\n                                            {\"Size\"}\r\n                                        </th>\r\n                                        <th>\r\n                                            {\"Download\"}\r\n                                        </th>\r\n                                        <th>\r\n                                            {\"Delete\"}\r\n                                        </th>\r\n                                        <th>\r\n                                            {\"Copy Link\"}\r\n                                        </th>\r\n                                        <th>\r\n                                            {\"Upload Date\"}\r\n                                        </th>\r\n                                        <th>\r\n                                            {\"File Description\"}\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.files\r\n                                    .map(f=>{\r\n                                        return (<FileBar key={f._id}\r\n                                            size={f.length}\r\n                                            filename={f.filename}\r\n                                            fileId={f._id}\r\n                                            onDelete={this.onDeleteHandler.bind(this, f._id)}\r\n                                            onCopy={this.onCopy.bind(this,f._id)}\r\n                                            uploadDate={new Date(f.uploadDate).toLocaleString()}\r\n                                            fileDescription={f.metadata.uploadDescription}/>)\r\n                                            })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </React.Fragment>\r\n\r\n                )\r\n                :\r\n                (<h1>There are no files at the moment...</h1>)}\r\n                {console.log(this.state.files[0])}\r\n            </div>\r\n            \r\n        );   \r\n    }\r\n}\r\n\r\n\r\nexport default FileViewer;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst footer = props =>{\r\n    return (<footer className=\"footer\">\r\n    Made with {\"<3\"} by <a href=\"https://github.com/luzushka\">Yonatan Lozinsky</a> :)\r\n    </footer>)\r\n}\r\n\r\nexport default footer;\r\n","import React, {Component} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Navbar from './Navbar/Navbar';\r\nimport SignUp from './SignUp/SignUp'\r\nimport Login from './Login/Login';\r\nimport Upload from './Upload/Upload'\r\nimport FileViewer from './FileViewer/FileViewer';\r\nimport Footer from './Footer/Footer';\r\n\r\nclass Site extends Component {\r\n    \r\n    state = {\r\n        user: localStorage.getItem(\"userName\") || '',\r\n        username: localStorage.getItem(\"userName\") || '',\r\n        userId: localStorage.getItem(\"userId\") || '',\r\n        token: localStorage.getItem(\"token\") || ''\r\n    }\r\n\r\n    \r\n    handleLogout = () =>{\r\n        localStorage.clear();\r\n        this.setState({user:'', username:'', userId:'', token:''});\r\n        window.location.href = \"/\"\r\n    }\r\n\r\n    loadUsers = () =>{\r\n        this.setState({\r\n            user: true,\r\n            username: localStorage.getItem(\"userName\"),\r\n            userId: localStorage.getItem(\"userId\"),\r\n            token: localStorage.getItem(\"token\")\r\n\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(){\r\n        // console.log(\"[Entered shouldComponentUpdate]\");\r\n        return true;\r\n    }\r\n\r\n\r\n    noUserRoutes = (\r\n        <div>\r\n            <Route path=\"/\" exact render={()=><Login loadUser={this.loadUsers}/>}></Route>\r\n                    <Route path=\"/signup\" exact render={()=><SignUp/>}></Route>\r\n\r\n        </div>\r\n    )\r\n\r\n    yesUserRoutes = (\r\n        <div>\r\n            <Route path=\"/\" exact render={()=><Upload\r\n                    tokenProp={this.state.token}\r\n                    userId={this.state.userId}\r\n                    logout={this.handleLogout}/>}></Route>\r\n            <Route path=\"/allfiles\" exact render={()=><FileViewer tokenProp={this.state.token} logout={this.handleLogout}/>}></Route>\r\n        </div>\r\n    );\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <Navbar user={this.state.username} isUser={this.state.user} logoutHandler={this.handleLogout}/>\r\n            { (this.state.user) ? (\r\n               this.yesUserRoutes)\r\n                :(this.noUserRoutes)\r\n                }\r\n                <Footer></Footer>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n}\r\n\r\nexport default Site;","import React, { Component } from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport Site from './Site/Site';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n        <Site />\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}